@model CreditCalculator.Models.Credit

@{
    ViewBag.Title = "Кредитный калькулятор";
}

<h2>Кредит</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BeginDate, new { htmlAttributes = new { @class = "form-control", id = "beginDateEditor" } })
            @Html.ValidationMessageFor(model => model.BeginDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", id = "endDateEditor" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaymentPeriodsCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PaymentPeriodsCount, new { htmlAttributes = new { @class = "form-control", id = "paymentsPeriodsCountEditor" } })
            @Html.ValidationMessageFor(model => model.PaymentPeriodsCount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <p id="daysBetweenPeriods">Платеж каждый ... день(-я)</p>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Рассчитать" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            var d = new Date();
            var month = d.getMonth() + 1; // если месяц меньше 10, то надо подставить 0 в начале месяца (чтобы подходил по формату, напр. если февраль - то вернет "02" вместо "2")
            if (month < 10) {
                month = "0" + month;
            }
            var today = d.getFullYear() + "-" + (month) + "-" + d.getDate();
            $("#beginDateEditor").val(today);
        })
    </script>
    <script>
        $("#paymentsPeriodsCountEditor").on('change', displayDaysDifference);
        $("#beginDateEditor").on('change', displayDaysDifference);
        $("#endDateEditor").on('change', displayDaysDifference);

        function displayDaysDifference() {
            var beginDate = new Date($("#beginDateEditor").val());
            var endDate = new Date($("#endDateEditor").val());

            var diffDays = parseInt((endDate - beginDate) / (1000 * 60 * 60 * 24), 10);

            var paymentPeriodsCount = $("#paymentsPeriodsCountEditor").val();
            var daysBetweenPeriods = Math.ceil(diffDays / paymentPeriodsCount);

            if (diffDays > 0 && paymentPeriodsCount > 0
            ) { // true если beginDate < endDate и указанное количество платежей > 0
                $("#daysBetweenPeriods").text("Платеж каждый " + daysBetweenPeriods + " день(-я)");
            } else {
                $("#daysBetweenPeriods").text("Платеж каждый ... день(-я)");
            }
        }
    </script>
}
